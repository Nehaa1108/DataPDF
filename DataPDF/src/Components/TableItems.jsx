// import { useEffect, useState } from "react";
// import UserData from "./UserData";
// const Api = "http://localhost:3031/users";

// function TableItems() {
//   const [users, setUsers] = useState([]);

//   const fetchUser = async (url) => {
//     try {
//       const res = await fetch(url);
//       const data = await res.json();
//       console.log(data);

//       if (data.length > 0) {
//         setUsers(data);
//       }
//     } catch (e) {
//       console.error(e);
//     }
//   };

//   useEffect(() => {
//     fetchUser(Api);
//   }, []);

//   return (
//     <>
//       <div className="container mt-4">
//         <div className="table-responsive">
//           <table className="table table-bordered table-striped table-hover">
//             <thead className="table-dark">
//               <tr>
//                 <th>ID</th>
//                 <th>Name</th>
//                 <th>Email</th>
//                 <th>Phone</th>
//               </tr>
//             </thead>
//             <tbody>
//               <UserData users={users} />
//             </tbody>
//           </table>
//         </div>
//       </div>
//     </>
//   );
// }

// export default TableItems;
import { useEffect, useState } from "react";
import UserData from "./UserData";
import jsPDF from "jspdf";


import * as XLSX from "xlsx";
import { saveAs } from "file-saver";

const Api = "http://localhost:3031/users";

function TableItems() {
  const [users, setUsers] = useState([]);

  const fetchUser = async (url) => {
    try {
      const res = await fetch(url);
      const data = await res.json();
      console.log(data);

      if (data.length > 0) {
        setUsers(data);
      }
    } catch (e) {
      console.error(e);
    }
  };

  useEffect(() => {
    fetchUser(Api);
  }, []);

  const generatePDF = () => {
    const doc = new jsPDF();  // Create a new jsPDF document
    doc.setFont("helvetica", "normal");  // Set the font to Helvetica
  
    // Set title
    doc.setFontSize(18);  // Set the font size for the title
    doc.setTextColor(0, 102, 204);  // Set the text color (blue)
    doc.text("User Data Report", 14, 20);  // Add the title text
  
    // Set the table headers
    doc.setFontSize(12);  // Set the font size for the table content
    doc.setTextColor(0, 0, 0);  // Reset text color to black for table content
  
    // Table header row
    const header = ["ID", "Name", "Email", "Phone"];
    doc.setFillColor(34, 45, 50); // Set the background color for the header row
    doc.rect(14, 30, 180, 10, "F");  // Draw a rectangle for the header background
    header.forEach((text, i) => {
      doc.text(text, 20 + i * 45, 35);  // Add header text with some padding
    });
  
    // Add data rows
    users.forEach((user, index) => {
      const { id, name, email, phone } = user;
  
      // Convert values to strings to avoid any issues
      const userId = String(id);  // Ensure the ID is a string
      const userName = String(name);  // Ensure the Name is a string
      const userEmail = String(email);  // Ensure the Email is a string
      const userPhone = String(phone);  // Ensure the Phone is a string
  
      // Set row style
      doc.setFontSize(10);
      doc.setTextColor(0, 0, 0);  // Set text color to black
  
      // Add data values, adjusting X and Y for each row
      doc.text(userId, 20, 45 + index * 10);  // Column 1
      doc.text(userName, 65, 45 + index * 10);  // Column 2
      doc.text(userEmail, 110, 45 + index * 10);  // Column 3
      doc.text(userPhone, 155, 45 + index * 10);  // Column 4
    });
  
    // Add footer text (optional)
    doc.setFontSize(8);
    doc.setTextColor(100);  // Gray text for footer
    doc.text("Generated by My App", 14, doc.internal.pageSize.height - 10); // Footer text
  
    // Save the document as a PDF
    doc.save("user_data_report.pdf");
  };
  

  // Function to generate Excel
  const generateExcel = () => {
    const ws = XLSX.utils.json_to_sheet(users);
    const wb = XLSX.utils.book_new();
    XLSX.utils.book_append_sheet(wb, ws, "Users");

    // Save as Excel file
    const excelBuffer = XLSX.write(wb, { bookType: "xlsx", type: "array" });
    const data = new Blob([excelBuffer], { type: "application/octet-stream" });
    saveAs(data, "user_data.xlsx");
  };

  return (
    <div>
      <div className="container mt-4">
        <button className="btn btn-success" onClick={generatePDF}>
          Export to PDF
        </button>

        <button className="btn btn-primary" onClick={generateExcel}>
          Export to Excel
        </button>
        <div className="table-responsive mt-3">
          <table className="table table-bordered table-striped table-hover">
            <thead className="table-dark">
              <tr>
                <th>ID</th>
                <th>Name</th>
                <th>Email</th>
                <th>Phone</th>
              </tr>
            </thead>
            <tbody>
              <UserData users={users} />
            </tbody>
          </table>
        </div>
      </div>
    </div>
  );
}

export default TableItems;




// without style
// import { useEffect, useState } from "react";
// import UserData from "./UserData";
// import jsPDF from "jspdf";

// const Api = "http://localhost:3031/users";

// function TableItems() {
//   const [users, setUsers] = useState([]);

//   const fetchUser = async (url) => {
//     try {
//       const res = await fetch(url);
//       const data = await res.json();
//       console.log(data);

//       if (data.length > 0) {
//         setUsers(data);
//       }
//     } catch (e) {
//       console.error(e);
//     }
//   };

//   useEffect(() => {
//     fetchUser(Api);
//   }, []);

//   // Function to generate PDF
//   const generatePDF = () => {
//     const doc = new jsPDF();
//     doc.setFontSize(12);

//     // Create the table header
//     doc.text("ID  Name       Email            Phone", 10, 10);

//     // Add user data
//     users.forEach((user, index) => {
//       const { id, name, email, phone } = user;
//       doc.text(`${id}  ${name}  ${email}  ${phone}`, 10, 20 + index * 10);
//     });

//     doc.save("user_data.pdf");
//   };

//   return (
//     <div>
//       <div className="container mt-4">
//         <button className="btn btn-success" onClick={generatePDF}>
//           Export to PDF
//         </button>
//         <div className="table-responsive mt-3">
//           <table className="table table-bordered table-striped table-hover">
//             <thead className="table-dark">
//               <tr>
//                 <th>ID</th>
//                 <th>Name</th>
//                 <th>Email</th>
//                 <th>Phone</th>
//               </tr>
//             </thead>
//             <tbody>
//               <UserData users={users} />
//             </tbody>
//           </table>
//         </div>
//       </div>
//     </div>
//   );
// }

// export default TableItems;
